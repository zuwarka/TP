#pragma once

typedef struct Unit //элемент стека
{
	int data = 0; //целоисенные данные стека
	Unit* next = 0; //указатель на следующий элемент стека
} Unit;

class Stack
{
private:
	Unit* head; //голова стека
	int size; //размер стека, будет вводиться с клавиатуры

public:
	Unit* get_head();
	int get_size();
	void set_size(int& s);

	Stack(); //конструктор без параметров
	Stack(const Stack& st_copy); //конструктор копирования
	explicit Stack(int size_init); //конструктор (явный) с параметром (размер стека...) по умолчанию
	~Stack(); //деструктор

	void push(int el); //поместить элемент в стек
	int pop(); //получить элемент из стека
	void print(); //вывести стек на экран

	Stack &operator !(); //префиксный оператор на проверку пустоты стека
	Stack& operator --(); //префиксны оператор - уменьшает все значения на максимальное значение стека
	Stack& operator --(/*postfix*/); //постфиксны оператор - уменьшает все значения на минимальное значение стека
	friend void operator ++(); //префиксный оператор - увеличивает все значения в стеке на максимальное значение стека
	friend void operator ++(/*postfix*/); //постфиксный оператор - увеличивает все значения в стеке на минимальное значение стека
};
